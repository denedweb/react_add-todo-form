{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","TodoInfo","todo","TodoList","todos","map","username","getUserById","usersFromServer","find","TodoForm","onSubmit","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasSelectError","setHasSelectError","action","method","event","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","initialTodos","todosFromServer","maxId","Math","max","App","setTodos","date","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2ede13a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasSelectError(false);\n  };\n\n  const handleSubmit = ((event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasSelectError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      user: getUserById(userId),\n      id: 0,\n      title,\n      userId,\n      completed: false,\n    });\n\n    reset();\n  });\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">\n          Title:&nbsp;\n        </label>\n\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"select\">\n          User:&nbsp;\n        </label>\n\n        <select\n          id=\"select\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleSelectChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasSelectError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst maxId = Math.max(...todosFromServer.map(todo => todo.id));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = ({ id, ...date }: Todo) => {\n    const newTodo = {\n      id: maxId + 1,\n      ...date,\n    };\n\n    setTodos(currentTodo => [\n      ...currentTodo,\n      newTodo,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}